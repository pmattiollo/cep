# Default
button.add.new=Insert New
button.back=Back
button.delete=Remove
button.dialog.no=No, sorry\!
button.dialog.yes=Yes, sure\!
button.edit=Edit
button.new=New
button.save=Save
button.finalize=Finalize

label.action=Action
label.dialog.alert=Alert
label.dialog.delete=Remove
label.confirm.delete=Confirm?
label.date.pattern=dd/MM/yyyy hh:mm:ss

main.app.title=CEP-S
main.app.welcome=Welcome to the example application CEP-S. This is your starting point, feel free to change this application.
main.change.skin=Change Skin
main.skin=Skin
main.footer.text=Example Application for Demoiselle ${parent.version}

menu.language=Language
menu.menuitem.language-portuguese=Portuguese
menu.menuitem.language-english=English
menu.menuitem.contents=Content
menu.menuitem.list=List
menu.menuitem.classification=Classification
menu.menuitem.new=New
menu.menuitem.quit=Quit

# Erros pages
page.error.404.title=Error 404
page.error.404.message=Page not found.

page.error.500.title=Error 500
page.error.500.message=Sorry, the system fail. Try to redo the operation.
page.error.500.message.contact=contact 

# Login
login.label=Login
login.user=User
login.password=Password
login.email=E-mail

login.user.not.exists=User does not exists.
login.password.not.match=Password does not match.
login.fail=Login fail.

button.login=Acess
button.forget.password=Forget my password
button.send=Send
button.new.user=Register

# Acess control
control.acess.has.not.paper=User has not paper.
control.acess.has.not.permission=User has not permission.

mailto.address=pmattiollo@gmail.com

# Collect
menu.collect=Collects
collect.label=Collect

collect.delete.ok=Collect removed: {0}
collect.insert.ok=Collect inserted: {0}
collect.update.ok=Collect updated: {0}

collect.delete.nok=Error when deleting collect: {0}
collect.insert.nok=Error when inserting collect:: {0}
collect.update.nok=Error when updating collect:: {0}

collect.list.table.title=List of Collects

collect.label.id=id
collect.alt.id=id

collect.label.start_date=date
collect.alt.start_date=date
collect.mandatory.start_date=Date is mandatory

collect.label.software=software
collect.alt.software=software
collect.mandatory.software=Software is mandatory

collect.label.item=item
collect.alt.item=item
collect.mandatory.item=Item is mandatory

collect.label.value=value
collect.alt.value=value
collect.mandatory.value=Value is mandatory

# Software
menu.software=Softwares
software.label=Software

software.delete.ok=Software removed: {0}
software.insert.ok=Software inserted: {0}
software.update.ok=Software updated: {0}

software.delete.nok=Error when deleting Software: {0}
software.insert.nok=Error when inserting Software: {0}
software.update.nok=Error when updating Software: {0}

software.list.table.title=List of Softwares

software.label.id=id
software.alt.id=id

software.label.description=description
software.alt.description=description
software.mandatory.description=Description is mandatory

software.label.items=items
software.alt.items=items
software.mandatory.items=At least one item must be selected

# Item
menu.item=Items
item.label=Item

item.delete.ok=Item removed: {0}
item.insert.ok=Item inserted: {0}
item.update.ok=Item updated: {0}

item.delete.nok=Error when deleting Item: {0}
item.insert.nok=Error when inserting Item: {0}
item.update.nok=Error when updating Item: {0}

item.list.table.title=List of Items
item.list.classification.table.title=Classification of Items

item.label.id=id
item.alt.id=id

item.label.description=description
item.alt.description=description
item.mandatory.description=Description is mandatory

item.label.usl=upper specification limit
item.alt.usl=upper specification limit
item.mandatory.usl=Upper specification limit is mandatory

item.label.lsl=lower specification limit
item.alt.lsl=lower specification limit
item.mandatory.lsl=Lower specification limit is mandatory

item.label.stable=stable
item.alt.stable=stable
item.mandatory.stable=Stable is mandatory

item.label.able=able
item.alt.able=able
item.mandatory.able=Able is mandatory

item.label.process=process phase
item.alt.process=process phase
item.mandatory.process=Process is mandatory

# User
menu.user=Users
user.label=User

user.delete.ok=User removed: {0}
user.insert.ok=User inserted: {0}
user.update.ok=User updated: {0}

user.delete.nok=Error when deleting User: {0}
user.insert.nok=Error when inserting User: {0}
user.update.nok=Error when updating User: {0}

user.list.table.title=List of Users

user.label.id=id
user.alt.id=id

user.label.name=name
user.alt.name=name
user.mandatory.name=Name is mandatory

user.label.login=login
user.alt.login=login
user.mandatory.login=Login is mandatory

user.label.password=password
user.alt.password=password
user.mandatory.password=Password is mandatory

user.label.email=email
user.alt.email=email
user.mandatory.email=Email is mandatory

user.label.paper=paper
user.alt.paper=paper
user.mandatory.paper=Paper is mandatory

# Graphs
menu.graph=Graphs
graph.label=Graph

report.graph.submit=Generate

# Process
menu.process=Process Phases
process.label=Process

process.delete.ok=Process Phase removed: {0}
process.insert.ok=Process Phase inserted: {0}
process.update.ok=Process Phase updated: {0}

process.delete.nok=Error when deleting Process Phase: {0}
process.insert.nok=Error when inserting Process Phase: {0}
process.update.nok=Error when updating Process Phase: {0}

process.list.table.title=List of Process Phases

process.label.id=id
process.alt.id=id

process.label.description=description
process.alt.description=description
process.mandatory.description=Description is mandatory

# Integration
integration.label=Sonar Integration
integration.label.action=Integrate

integration.confirm.message=Want to confirm integration with SonarQube? Remember to inform limits (usl and lsl) for items.
